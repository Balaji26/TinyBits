//Utility written to remove the prefix for a list of files from one folder and copying it to another folder 

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class PrefixFileTransfer {

	public static void main(String[] args) throws IOException {
		File srcs = new File("C://From");
		File destn = new File("C://To");
		copyTo(srcs, destn);
	}
	public static void copyTo(File src, File dest) { 
		try {
			// recursively copy all the files of src folder if src is a directory
			if( src.isDirectory() ) {
				// creating parent folders where source files is to be copied
				dest.mkdirs();
				String change = null;

				for( File sourceChild : src.listFiles() ) {
					System.out.println("The Folder Contains : "+sourceChild);
					if(sourceChild.getName().startsWith("GP_")){
						//Replacing the prefix from the file name
						change = sourceChild.getName().replaceFirst("GP_", "");
						// File destChild = new File(dest, sourceChild.getName());
						File destChild = new File(dest, change);
						copyTo(sourceChild, destChild);
						System.out.println("File copied Successfully");
					}else if(sourceChild.getName().isEmpty() || !sourceChild.getName().startsWith("GP_")){
						System.out.println("No files Found with that prefix in the folder or the folder is empty");
					}
				}
				System.out.println("The folder is empty");
			} 
			// copy the source file
			else {
				InputStream in = new FileInputStream(src);
				OutputStream out = new FileOutputStream(dest);
				// Copy the bits from instream to outstream
				byte[] buf = new byte[1024];
				int len;
				while ((len = in.read(buf)) > 0) {
					out.write(buf, 0, len);
				}
				in.close();
				out.close();
			}
		} catch (FileNotFoundException e) {
			System.out.println("No files Found ");
			e.printStackTrace();
		} catch (IOException e) {
			System.out.println("IO Exception ");
			e.printStackTrace();
		}
	}
}
